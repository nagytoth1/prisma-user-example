apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    io.kompose.service: mysql
  {{- include "users.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.mysql.replicas }}
  strategy:
    type: {{ .Values.mysql.strategy.type | quote }}
  selector:
    matchLabels:
      io.kompose.service: mysql
    {{- include "users.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.kompose.service: mysql
      {{- include "users.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: {{ quote .Values.mysql.mysql.env.mysqlDatabase }}
        - name: MYSQL_PASSWORD
          value: {{ quote .Values.mysql.mysql.env.mysqlPassword }}
        - name: MYSQL_ROOT_PASSWORD
          value: {{ quote .Values.mysql.mysql.env.mysqlRootPassword }}
        - name: MYSQL_USER
          value: {{ quote .Values.mysql.mysql.env.mysqlUser }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.mysql.mysql.image.repository }}:{{ .Values.mysql.mysql.image.tag
          | default .Chart.AppVersion }}
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        name: mysql
        ports:
        - containerPort: 3306
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - mysql
            - -h
            - 127.0.0.1
            - -prootpassword
            - -e
            - SELECT 1
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-data
      restartPolicy: Always
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-data
